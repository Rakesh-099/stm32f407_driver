
stm32F4xx_driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000054c  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006d4  080006dc  000106dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006d4  080006d4  000106dc  2**0
                  CONTENTS
  4 .ARM          00000000  080006d4  080006d4  000106dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006d4  080006dc  000106dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006d4  080006d4  000106d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006d8  080006d8  000106d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000106dc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000106dc  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00010706  2**0
                  CONTENTS, READONLY
 14 .debug_info   0000086c  00000000  00000000  00010749  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000024d  00000000  00000000  00010fb5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000b8  00000000  00000000  00011208  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000007e  00000000  00000000  000112c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00001398  00000000  00000000  0001133e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000d25  00000000  00000000  000126d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000053be  00000000  00000000  000133fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000224  00000000  00000000  000187bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000057  00000000  00000000  000189e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080006bc 	.word	0x080006bc

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080006bc 	.word	0x080006bc

080001c8 <GPIO_PeriClockControl>:

/*
 * Peripheral Clock Setup
  */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx,uint8_t EnorDi)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
 80001d0:	460b      	mov	r3, r1
 80001d2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE){
 80001d4:	78fb      	ldrb	r3, [r7, #3]
 80001d6:	2b01      	cmp	r3, #1
 80001d8:	d162      	bne.n	80002a0 <GPIO_PeriClockControl+0xd8>
		if(pGPIOx == GPIOA){
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a64      	ldr	r2, [pc, #400]	; (8000370 <GPIO_PeriClockControl+0x1a8>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d106      	bne.n	80001f0 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80001e2:	4b64      	ldr	r3, [pc, #400]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80001e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001e6:	4a63      	ldr	r2, [pc, #396]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80001e8:	f043 0301 	orr.w	r3, r3, #1
 80001ec:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOH_PCLK_DI();
		}else if(pGPIOx == GPIOI){
			GPIOI_PCLK_DI();
		}
	}
}
 80001ee:	e0b9      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOB){
 80001f0:	687b      	ldr	r3, [r7, #4]
 80001f2:	4a61      	ldr	r2, [pc, #388]	; (8000378 <GPIO_PeriClockControl+0x1b0>)
 80001f4:	4293      	cmp	r3, r2
 80001f6:	d106      	bne.n	8000206 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80001f8:	4b5e      	ldr	r3, [pc, #376]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80001fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001fc:	4a5d      	ldr	r2, [pc, #372]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80001fe:	f043 0302 	orr.w	r3, r3, #2
 8000202:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000204:	e0ae      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOC){
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	4a5c      	ldr	r2, [pc, #368]	; (800037c <GPIO_PeriClockControl+0x1b4>)
 800020a:	4293      	cmp	r3, r2
 800020c:	d106      	bne.n	800021c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800020e:	4b59      	ldr	r3, [pc, #356]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000210:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000212:	4a58      	ldr	r2, [pc, #352]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000214:	f043 0304 	orr.w	r3, r3, #4
 8000218:	6313      	str	r3, [r2, #48]	; 0x30
}
 800021a:	e0a3      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOD){
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	4a58      	ldr	r2, [pc, #352]	; (8000380 <GPIO_PeriClockControl+0x1b8>)
 8000220:	4293      	cmp	r3, r2
 8000222:	d106      	bne.n	8000232 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000224:	4b53      	ldr	r3, [pc, #332]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000226:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000228:	4a52      	ldr	r2, [pc, #328]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 800022a:	f043 0308 	orr.w	r3, r3, #8
 800022e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000230:	e098      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOE){
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	4a53      	ldr	r2, [pc, #332]	; (8000384 <GPIO_PeriClockControl+0x1bc>)
 8000236:	4293      	cmp	r3, r2
 8000238:	d106      	bne.n	8000248 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800023a:	4b4e      	ldr	r3, [pc, #312]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 800023c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800023e:	4a4d      	ldr	r2, [pc, #308]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000240:	f043 0310 	orr.w	r3, r3, #16
 8000244:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000246:	e08d      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOF){
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	4a4f      	ldr	r2, [pc, #316]	; (8000388 <GPIO_PeriClockControl+0x1c0>)
 800024c:	4293      	cmp	r3, r2
 800024e:	d106      	bne.n	800025e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000250:	4b48      	ldr	r3, [pc, #288]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000252:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000254:	4a47      	ldr	r2, [pc, #284]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000256:	f043 0320 	orr.w	r3, r3, #32
 800025a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800025c:	e082      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOG){
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	4a4a      	ldr	r2, [pc, #296]	; (800038c <GPIO_PeriClockControl+0x1c4>)
 8000262:	4293      	cmp	r3, r2
 8000264:	d106      	bne.n	8000274 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000266:	4b43      	ldr	r3, [pc, #268]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000268:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800026a:	4a42      	ldr	r2, [pc, #264]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 800026c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000270:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000272:	e077      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOH){
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	4a46      	ldr	r2, [pc, #280]	; (8000390 <GPIO_PeriClockControl+0x1c8>)
 8000278:	4293      	cmp	r3, r2
 800027a:	d106      	bne.n	800028a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800027c:	4b3d      	ldr	r3, [pc, #244]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 800027e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000280:	4a3c      	ldr	r2, [pc, #240]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000282:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000286:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000288:	e06c      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOI){
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	4a41      	ldr	r2, [pc, #260]	; (8000394 <GPIO_PeriClockControl+0x1cc>)
 800028e:	4293      	cmp	r3, r2
 8000290:	d168      	bne.n	8000364 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000292:	4b38      	ldr	r3, [pc, #224]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000294:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000296:	4a37      	ldr	r2, [pc, #220]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000298:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800029c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800029e:	e061      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA){
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	4a33      	ldr	r2, [pc, #204]	; (8000370 <GPIO_PeriClockControl+0x1a8>)
 80002a4:	4293      	cmp	r3, r2
 80002a6:	d106      	bne.n	80002b6 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80002a8:	4b32      	ldr	r3, [pc, #200]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80002aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ac:	4a31      	ldr	r2, [pc, #196]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80002ae:	f023 0301 	bic.w	r3, r3, #1
 80002b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002b4:	e056      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOB){
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	4a2f      	ldr	r2, [pc, #188]	; (8000378 <GPIO_PeriClockControl+0x1b0>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	d106      	bne.n	80002cc <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80002be:	4b2d      	ldr	r3, [pc, #180]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80002c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c2:	4a2c      	ldr	r2, [pc, #176]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80002c4:	f023 0302 	bic.w	r3, r3, #2
 80002c8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ca:	e04b      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOC){
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	4a2b      	ldr	r2, [pc, #172]	; (800037c <GPIO_PeriClockControl+0x1b4>)
 80002d0:	4293      	cmp	r3, r2
 80002d2:	d106      	bne.n	80002e2 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80002d4:	4b27      	ldr	r3, [pc, #156]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80002d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d8:	4a26      	ldr	r2, [pc, #152]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80002da:	f023 0304 	bic.w	r3, r3, #4
 80002de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e0:	e040      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOD){
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a26      	ldr	r2, [pc, #152]	; (8000380 <GPIO_PeriClockControl+0x1b8>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	d106      	bne.n	80002f8 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80002ea:	4b22      	ldr	r3, [pc, #136]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80002ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ee:	4a21      	ldr	r2, [pc, #132]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 80002f0:	f023 0308 	bic.w	r3, r3, #8
 80002f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f6:	e035      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOE){
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a22      	ldr	r2, [pc, #136]	; (8000384 <GPIO_PeriClockControl+0x1bc>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d106      	bne.n	800030e <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000300:	4b1c      	ldr	r3, [pc, #112]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000304:	4a1b      	ldr	r2, [pc, #108]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000306:	f023 0310 	bic.w	r3, r3, #16
 800030a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030c:	e02a      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOF){
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a1d      	ldr	r2, [pc, #116]	; (8000388 <GPIO_PeriClockControl+0x1c0>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 8000316:	4b17      	ldr	r3, [pc, #92]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031a:	4a16      	ldr	r2, [pc, #88]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 800031c:	f023 0320 	bic.w	r3, r3, #32
 8000320:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000322:	e01f      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOG){
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a19      	ldr	r2, [pc, #100]	; (800038c <GPIO_PeriClockControl+0x1c4>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 800032c:	4b11      	ldr	r3, [pc, #68]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000330:	4a10      	ldr	r2, [pc, #64]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000332:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000336:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000338:	e014      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOH){
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a14      	ldr	r2, [pc, #80]	; (8000390 <GPIO_PeriClockControl+0x1c8>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000342:	4b0c      	ldr	r3, [pc, #48]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000346:	4a0b      	ldr	r2, [pc, #44]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 8000348:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800034c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034e:	e009      	b.n	8000364 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOI){
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a10      	ldr	r2, [pc, #64]	; (8000394 <GPIO_PeriClockControl+0x1cc>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d105      	bne.n	8000364 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000358:	4b06      	ldr	r3, [pc, #24]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035c:	4a05      	ldr	r2, [pc, #20]	; (8000374 <GPIO_PeriClockControl+0x1ac>)
 800035e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000362:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000364:	bf00      	nop
 8000366:	370c      	adds	r7, #12
 8000368:	46bd      	mov	sp, r7
 800036a:	bc80      	pop	{r7}
 800036c:	4770      	bx	lr
 800036e:	bf00      	nop
 8000370:	40020000 	.word	0x40020000
 8000374:	40023800 	.word	0x40023800
 8000378:	40020400 	.word	0x40020400
 800037c:	40020800 	.word	0x40020800
 8000380:	40020c00 	.word	0x40020c00
 8000384:	40021000 	.word	0x40021000
 8000388:	40021400 	.word	0x40021400
 800038c:	40021800 	.word	0x40021800
 8000390:	40021c00 	.word	0x40021c00
 8000394:	40022000 	.word	0x40022000

08000398 <GPIO_Init>:

/*
 * Init and DeInit
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000398:	b480      	push	{r7}
 800039a:	b085      	sub	sp, #20
 800039c:	af00      	add	r7, sp, #0
 800039e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80003a0:	2300      	movs	r3, #0
 80003a2:	60fb      	str	r3, [r7, #12]
	//1. Configure the mode of GPIO PIN
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	795b      	ldrb	r3, [r3, #5]
 80003a8:	2b03      	cmp	r3, #3
 80003aa:	d81e      	bhi.n	80003ea <GPIO_Init+0x52>
		temp =  (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	795b      	ldrb	r3, [r3, #5]
 80003b0:	461a      	mov	r2, r3
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	791b      	ldrb	r3, [r3, #4]
 80003b6:	005b      	lsls	r3, r3, #1
 80003b8:	fa02 f303 	lsl.w	r3, r2, r3
 80003bc:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);//clearing
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	681a      	ldr	r2, [r3, #0]
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	791b      	ldrb	r3, [r3, #4]
 80003c8:	4619      	mov	r1, r3
 80003ca:	2303      	movs	r3, #3
 80003cc:	408b      	lsls	r3, r1
 80003ce:	43db      	mvns	r3, r3
 80003d0:	4619      	mov	r1, r3
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	400a      	ands	r2, r1
 80003d8:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;//setting
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	6819      	ldr	r1, [r3, #0]
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	68fa      	ldr	r2, [r7, #12]
 80003e6:	430a      	orrs	r2, r1
 80003e8:	601a      	str	r2, [r3, #0]
	}
	else
	{
		//this part later(Interrupt mode)
	}
	temp = 0;
 80003ea:	2300      	movs	r3, #0
 80003ec:	60fb      	str	r3, [r7, #12]
	//2. Configure the speed.
	temp =  (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	799b      	ldrb	r3, [r3, #6]
 80003f2:	461a      	mov	r2, r3
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	791b      	ldrb	r3, [r3, #4]
 80003f8:	005b      	lsls	r3, r3, #1
 80003fa:	fa02 f303 	lsl.w	r3, r2, r3
 80003fe:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);//clearing
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	689a      	ldr	r2, [r3, #8]
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	791b      	ldrb	r3, [r3, #4]
 800040a:	4619      	mov	r1, r3
 800040c:	2303      	movs	r3, #3
 800040e:	408b      	lsls	r3, r1
 8000410:	43db      	mvns	r3, r3
 8000412:	4619      	mov	r1, r3
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	681b      	ldr	r3, [r3, #0]
 8000418:	400a      	ands	r2, r1
 800041a:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;//setting
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	6899      	ldr	r1, [r3, #8]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	681b      	ldr	r3, [r3, #0]
 8000426:	68fa      	ldr	r2, [r7, #12]
 8000428:	430a      	orrs	r2, r1
 800042a:	609a      	str	r2, [r3, #8]

	temp = 0;
 800042c:	2300      	movs	r3, #0
 800042e:	60fb      	str	r3, [r7, #12]
	//3. Configure the pull up and pull down settings
	temp =  (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	79db      	ldrb	r3, [r3, #7]
 8000434:	461a      	mov	r2, r3
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	791b      	ldrb	r3, [r3, #4]
 800043a:	005b      	lsls	r3, r3, #1
 800043c:	fa02 f303 	lsl.w	r3, r2, r3
 8000440:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);//clearing
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	68da      	ldr	r2, [r3, #12]
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	791b      	ldrb	r3, [r3, #4]
 800044c:	4619      	mov	r1, r3
 800044e:	2303      	movs	r3, #3
 8000450:	408b      	lsls	r3, r1
 8000452:	43db      	mvns	r3, r3
 8000454:	4619      	mov	r1, r3
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	681b      	ldr	r3, [r3, #0]
 800045a:	400a      	ands	r2, r1
 800045c:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;//setting
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	68d9      	ldr	r1, [r3, #12]
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	68fa      	ldr	r2, [r7, #12]
 800046a:	430a      	orrs	r2, r1
 800046c:	60da      	str	r2, [r3, #12]

	temp = 0;
 800046e:	2300      	movs	r3, #0
 8000470:	60fb      	str	r3, [r7, #12]
	//4.Configure output type
	temp =  (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<  (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	7a1b      	ldrb	r3, [r3, #8]
 8000476:	461a      	mov	r2, r3
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	791b      	ldrb	r3, [r3, #4]
 800047c:	fa02 f303 	lsl.w	r3, r2, r3
 8000480:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);//clearing
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	685a      	ldr	r2, [r3, #4]
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	791b      	ldrb	r3, [r3, #4]
 800048c:	4619      	mov	r1, r3
 800048e:	2301      	movs	r3, #1
 8000490:	408b      	lsls	r3, r1
 8000492:	43db      	mvns	r3, r3
 8000494:	4619      	mov	r1, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	400a      	ands	r2, r1
 800049c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;//setting
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	6859      	ldr	r1, [r3, #4]
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	68fa      	ldr	r2, [r7, #12]
 80004aa:	430a      	orrs	r2, r1
 80004ac:	605a      	str	r2, [r3, #4]

	temp = 0;
 80004ae:	2300      	movs	r3, #0
 80004b0:	60fb      	str	r3, [r7, #12]
	//5. configure Alternate Functionality mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ALTFN){
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	795b      	ldrb	r3, [r3, #5]
 80004b6:	2b02      	cmp	r3, #2
 80004b8:	d831      	bhi.n	800051e <GPIO_Init+0x186>
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	791b      	ldrb	r3, [r3, #4]
 80004be:	08db      	lsrs	r3, r3, #3
 80004c0:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	791b      	ldrb	r3, [r3, #4]
 80004c6:	f003 0307 	and.w	r3, r3, #7
 80004ca:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF <<(4*temp2));
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	7afa      	ldrb	r2, [r7, #11]
 80004d2:	3208      	adds	r2, #8
 80004d4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004d8:	7abb      	ldrb	r3, [r7, #10]
 80004da:	009b      	lsls	r3, r3, #2
 80004dc:	220f      	movs	r2, #15
 80004de:	fa02 f303 	lsl.w	r3, r2, r3
 80004e2:	43db      	mvns	r3, r3
 80004e4:	4618      	mov	r0, r3
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	7afa      	ldrb	r2, [r7, #11]
 80004ec:	4001      	ands	r1, r0
 80004ee:	3208      	adds	r2, #8
 80004f0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<(4*temp2));
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	7afa      	ldrb	r2, [r7, #11]
 80004fa:	3208      	adds	r2, #8
 80004fc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	7a5b      	ldrb	r3, [r3, #9]
 8000504:	461a      	mov	r2, r3
 8000506:	7abb      	ldrb	r3, [r7, #10]
 8000508:	009b      	lsls	r3, r3, #2
 800050a:	fa02 f303 	lsl.w	r3, r2, r3
 800050e:	4618      	mov	r0, r3
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	7afa      	ldrb	r2, [r7, #11]
 8000516:	4301      	orrs	r1, r0
 8000518:	3208      	adds	r2, #8
 800051a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800051e:	bf00      	nop
 8000520:	3714      	adds	r7, #20
 8000522:	46bd      	mov	sp, r7
 8000524:	bc80      	pop	{r7}
 8000526:	4770      	bx	lr

08000528 <GPIO_ReadFromInputPin>:
	}
}
/*
 * Data read and write
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx,uint8_t PinNumber){
 8000528:	b480      	push	{r7}
 800052a:	b085      	sub	sp, #20
 800052c:	af00      	add	r7, sp, #0
 800052e:	6078      	str	r0, [r7, #4]
 8000530:	460b      	mov	r3, r1
 8000532:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value =  (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	691a      	ldr	r2, [r3, #16]
 8000538:	78fb      	ldrb	r3, [r7, #3]
 800053a:	fa22 f303 	lsr.w	r3, r2, r3
 800053e:	b2db      	uxtb	r3, r3
 8000540:	f003 0301 	and.w	r3, r3, #1
 8000544:	73fb      	strb	r3, [r7, #15]
	return value;
 8000546:	7bfb      	ldrb	r3, [r7, #15]
}
 8000548:	4618      	mov	r0, r3
 800054a:	3714      	adds	r7, #20
 800054c:	46bd      	mov	sp, r7
 800054e:	bc80      	pop	{r7}
 8000550:	4770      	bx	lr

08000552 <GPIO_ToggleOutPutPin>:
	}
}
void GPIO_writeToOutputPort(GPIO_RegDef_t *pGPIOx,uint16_t value){
	pGPIOx->ODR = value;
}
void GPIO_ToggleOutPutPin(GPIO_RegDef_t *pGPIOx,uint8_t PinNumber){
 8000552:	b480      	push	{r7}
 8000554:	b083      	sub	sp, #12
 8000556:	af00      	add	r7, sp, #0
 8000558:	6078      	str	r0, [r7, #4]
 800055a:	460b      	mov	r3, r1
 800055c:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	695b      	ldr	r3, [r3, #20]
 8000562:	78fa      	ldrb	r2, [r7, #3]
 8000564:	2101      	movs	r1, #1
 8000566:	fa01 f202 	lsl.w	r2, r1, r2
 800056a:	405a      	eors	r2, r3
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	615a      	str	r2, [r3, #20]
}
 8000570:	bf00      	nop
 8000572:	370c      	adds	r7, #12
 8000574:	46bd      	mov	sp, r7
 8000576:	bc80      	pop	{r7}
 8000578:	4770      	bx	lr
	...

0800057c <delay>:

#define BTN_PRESSED      	ENABLE


void delay()
{
 800057c:	b480      	push	{r7}
 800057e:	b083      	sub	sp, #12
 8000580:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i < 500000;i++);
 8000582:	2300      	movs	r3, #0
 8000584:	607b      	str	r3, [r7, #4]
 8000586:	e002      	b.n	800058e <delay+0x12>
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	3301      	adds	r3, #1
 800058c:	607b      	str	r3, [r7, #4]
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	4a04      	ldr	r2, [pc, #16]	; (80005a4 <delay+0x28>)
 8000592:	4293      	cmp	r3, r2
 8000594:	d9f8      	bls.n	8000588 <delay+0xc>
}
 8000596:	bf00      	nop
 8000598:	bf00      	nop
 800059a:	370c      	adds	r7, #12
 800059c:	46bd      	mov	sp, r7
 800059e:	bc80      	pop	{r7}
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop
 80005a4:	0007a11f 	.word	0x0007a11f

080005a8 <main>:
int main(void)
{
 80005a8:	b580      	push	{r7, lr}
 80005aa:	b086      	sub	sp, #24
 80005ac:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOLed,GPIOBtn;
	GPIOLed.pGPIOx = GPIOD;
 80005ae:	4b1a      	ldr	r3, [pc, #104]	; (8000618 <main+0x70>)
 80005b0:	60fb      	str	r3, [r7, #12]
	GPIOLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NUM_12;
 80005b2:	230c      	movs	r3, #12
 80005b4:	743b      	strb	r3, [r7, #16]
	GPIOLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80005b6:	2301      	movs	r3, #1
 80005b8:	747b      	strb	r3, [r7, #17]
	GPIOLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80005ba:	2302      	movs	r3, #2
 80005bc:	74bb      	strb	r3, [r7, #18]
	GPIOLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80005be:	2300      	movs	r3, #0
 80005c0:	753b      	strb	r3, [r7, #20]
	GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80005c2:	2300      	movs	r3, #0
 80005c4:	74fb      	strb	r3, [r7, #19]
	GPIO_PeriClockControl(GPIOD, ENABLE);
 80005c6:	2101      	movs	r1, #1
 80005c8:	4813      	ldr	r0, [pc, #76]	; (8000618 <main+0x70>)
 80005ca:	f7ff fdfd 	bl	80001c8 <GPIO_PeriClockControl>

	GPIO_Init(&GPIOLed);
 80005ce:	f107 030c 	add.w	r3, r7, #12
 80005d2:	4618      	mov	r0, r3
 80005d4:	f7ff fee0 	bl	8000398 <GPIO_Init>
	GPIOBtn.pGPIOx = GPIOA;
 80005d8:	4b10      	ldr	r3, [pc, #64]	; (800061c <main+0x74>)
 80005da:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NUM_0;
 80005dc:	2300      	movs	r3, #0
 80005de:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 80005e0:	2300      	movs	r3, #0
 80005e2:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80005e4:	2302      	movs	r3, #2
 80005e6:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80005e8:	2300      	movs	r3, #0
 80005ea:	71fb      	strb	r3, [r7, #7]
	GPIO_PeriClockControl(GPIOA, ENABLE);
 80005ec:	2101      	movs	r1, #1
 80005ee:	480b      	ldr	r0, [pc, #44]	; (800061c <main+0x74>)
 80005f0:	f7ff fdea 	bl	80001c8 <GPIO_PeriClockControl>

	GPIO_Init(&GPIOBtn);
 80005f4:	463b      	mov	r3, r7
 80005f6:	4618      	mov	r0, r3
 80005f8:	f7ff fece 	bl	8000398 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NUM_0) == BTN_PRESSED)
 80005fc:	2100      	movs	r1, #0
 80005fe:	4807      	ldr	r0, [pc, #28]	; (800061c <main+0x74>)
 8000600:	f7ff ff92 	bl	8000528 <GPIO_ReadFromInputPin>
 8000604:	4603      	mov	r3, r0
 8000606:	2b01      	cmp	r3, #1
 8000608:	d1f8      	bne.n	80005fc <main+0x54>
		{
			delay();
 800060a:	f7ff ffb7 	bl	800057c <delay>
			GPIO_ToggleOutPutPin(GPIOD, GPIO_PIN_NUM_12);
 800060e:	210c      	movs	r1, #12
 8000610:	4801      	ldr	r0, [pc, #4]	; (8000618 <main+0x70>)
 8000612:	f7ff ff9e 	bl	8000552 <GPIO_ToggleOutPutPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NUM_0) == BTN_PRESSED)
 8000616:	e7f1      	b.n	80005fc <main+0x54>
 8000618:	40020c00 	.word	0x40020c00
 800061c:	40020000 	.word	0x40020000

08000620 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000620:	480d      	ldr	r0, [pc, #52]	; (8000658 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000622:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000624:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000628:	480c      	ldr	r0, [pc, #48]	; (800065c <LoopForever+0x6>)
  ldr r1, =_edata
 800062a:	490d      	ldr	r1, [pc, #52]	; (8000660 <LoopForever+0xa>)
  ldr r2, =_sidata
 800062c:	4a0d      	ldr	r2, [pc, #52]	; (8000664 <LoopForever+0xe>)
  movs r3, #0
 800062e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000630:	e002      	b.n	8000638 <LoopCopyDataInit>

08000632 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000632:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000634:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000636:	3304      	adds	r3, #4

08000638 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000638:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800063a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800063c:	d3f9      	bcc.n	8000632 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800063e:	4a0a      	ldr	r2, [pc, #40]	; (8000668 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000640:	4c0a      	ldr	r4, [pc, #40]	; (800066c <LoopForever+0x16>)
  movs r3, #0
 8000642:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000644:	e001      	b.n	800064a <LoopFillZerobss>

08000646 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000646:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000648:	3204      	adds	r2, #4

0800064a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800064a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800064c:	d3fb      	bcc.n	8000646 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800064e:	f000 f811 	bl	8000674 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000652:	f7ff ffa9 	bl	80005a8 <main>

08000656 <LoopForever>:

LoopForever:
  b LoopForever
 8000656:	e7fe      	b.n	8000656 <LoopForever>
  ldr   r0, =_estack
 8000658:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800065c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000660:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000664:	080006dc 	.word	0x080006dc
  ldr r2, =_sbss
 8000668:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800066c:	2000001c 	.word	0x2000001c

08000670 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000670:	e7fe      	b.n	8000670 <ADC_IRQHandler>
	...

08000674 <__libc_init_array>:
 8000674:	b570      	push	{r4, r5, r6, lr}
 8000676:	4d0d      	ldr	r5, [pc, #52]	; (80006ac <__libc_init_array+0x38>)
 8000678:	4c0d      	ldr	r4, [pc, #52]	; (80006b0 <__libc_init_array+0x3c>)
 800067a:	1b64      	subs	r4, r4, r5
 800067c:	10a4      	asrs	r4, r4, #2
 800067e:	2600      	movs	r6, #0
 8000680:	42a6      	cmp	r6, r4
 8000682:	d109      	bne.n	8000698 <__libc_init_array+0x24>
 8000684:	4d0b      	ldr	r5, [pc, #44]	; (80006b4 <__libc_init_array+0x40>)
 8000686:	4c0c      	ldr	r4, [pc, #48]	; (80006b8 <__libc_init_array+0x44>)
 8000688:	f000 f818 	bl	80006bc <_init>
 800068c:	1b64      	subs	r4, r4, r5
 800068e:	10a4      	asrs	r4, r4, #2
 8000690:	2600      	movs	r6, #0
 8000692:	42a6      	cmp	r6, r4
 8000694:	d105      	bne.n	80006a2 <__libc_init_array+0x2e>
 8000696:	bd70      	pop	{r4, r5, r6, pc}
 8000698:	f855 3b04 	ldr.w	r3, [r5], #4
 800069c:	4798      	blx	r3
 800069e:	3601      	adds	r6, #1
 80006a0:	e7ee      	b.n	8000680 <__libc_init_array+0xc>
 80006a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80006a6:	4798      	blx	r3
 80006a8:	3601      	adds	r6, #1
 80006aa:	e7f2      	b.n	8000692 <__libc_init_array+0x1e>
 80006ac:	080006d4 	.word	0x080006d4
 80006b0:	080006d4 	.word	0x080006d4
 80006b4:	080006d4 	.word	0x080006d4
 80006b8:	080006d8 	.word	0x080006d8

080006bc <_init>:
 80006bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006be:	bf00      	nop
 80006c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006c2:	bc08      	pop	{r3}
 80006c4:	469e      	mov	lr, r3
 80006c6:	4770      	bx	lr

080006c8 <_fini>:
 80006c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ca:	bf00      	nop
 80006cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ce:	bc08      	pop	{r3}
 80006d0:	469e      	mov	lr, r3
 80006d2:	4770      	bx	lr
